function [ Direction ] = refractLight( Surface, Light, nOutside, nInside )
%REFRACTLIGHT Calculate refraction of light at a surface
%   Compute refraction of light at a surface of an object given by
%   triangular patches using Snell's law.
%
%   Light direction is given by Light.Direction, surface normal is given by
%   Surface.Normal. The refraction coefficients are given by nOutside and
%   nInside for the respective media.
    cells = mat2cell(Surface.Normal', size(Surface.Normal,2), ones(1,size(Surface.Normal,1)));
    B = sparse(blkdiag(cells{:}));
    
    tmp1 = -Surface.Normal.*(Surface.Normal*Light.Direction') + Light.Direction.*(diag(B'*B));
    L_xt = [0 Light.Direction(3) -Light.Direction(2);...
           -Light.Direction(3) 0 Light.Direction(1);...
           Light.Direction(2) Light.Direction(1) 0];
    tmp2 = sqrt(sum((L_xt*Surface.Normal').^2,1));

    Direction = nOutside/nInside*tmp1 - sqrt(1-(nOutside/nInside)^2*tmp2)*Surface.Normal; % Snells Law (vector form)
end

